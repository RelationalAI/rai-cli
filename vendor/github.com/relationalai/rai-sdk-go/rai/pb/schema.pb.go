// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: schema.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrimitiveType int32

const (
	// https://developers.google.com/protocol-buffers/docs/style#enums
	PrimitiveType_UNSPECIFIED_TYPE PrimitiveType = 0
	PrimitiveType_INT_128          PrimitiveType = 1 // Not present in protobuf, needs two 64-bit ints
	PrimitiveType_INT_64           PrimitiveType = 2
	PrimitiveType_INT_32           PrimitiveType = 3
	PrimitiveType_INT_16           PrimitiveType = 4 // Not present in protobuf
	PrimitiveType_INT_8            PrimitiveType = 5 // Not present in protobuf
	PrimitiveType_UINT_128         PrimitiveType = 6 // Not present in protobuf, needs two 64-bit ints
	PrimitiveType_UINT_64          PrimitiveType = 7
	PrimitiveType_UINT_32          PrimitiveType = 8
	PrimitiveType_UINT_16          PrimitiveType = 9  // Not present in protobuf
	PrimitiveType_UINT_8           PrimitiveType = 10 // Not present in protobuf
	PrimitiveType_FLOAT_64         PrimitiveType = 11
	PrimitiveType_FLOAT_32         PrimitiveType = 12
	PrimitiveType_FLOAT_16         PrimitiveType = 13 // Not present in protobuf
	PrimitiveType_CHAR             PrimitiveType = 14
	PrimitiveType_BOOL             PrimitiveType = 15
	// these share the string_val field
	PrimitiveType_STRING PrimitiveType = 16 // In protobuf this is really bytes.
	PrimitiveType_SYMBOL PrimitiveType = 17 // In protobuf this is really bytes.
	// VariableSizeStrings are not supported as PrimitiveValues, though the type can
	// show up in (internal) type signatures.
	PrimitiveType_VARIABLE_SIZE_STRING PrimitiveType = 18
)

// Enum value maps for PrimitiveType.
var (
	PrimitiveType_name = map[int32]string{
		0:  "UNSPECIFIED_TYPE",
		1:  "INT_128",
		2:  "INT_64",
		3:  "INT_32",
		4:  "INT_16",
		5:  "INT_8",
		6:  "UINT_128",
		7:  "UINT_64",
		8:  "UINT_32",
		9:  "UINT_16",
		10: "UINT_8",
		11: "FLOAT_64",
		12: "FLOAT_32",
		13: "FLOAT_16",
		14: "CHAR",
		15: "BOOL",
		16: "STRING",
		17: "SYMBOL",
		18: "VARIABLE_SIZE_STRING",
	}
	PrimitiveType_value = map[string]int32{
		"UNSPECIFIED_TYPE":     0,
		"INT_128":              1,
		"INT_64":               2,
		"INT_32":               3,
		"INT_16":               4,
		"INT_8":                5,
		"UINT_128":             6,
		"UINT_64":              7,
		"UINT_32":              8,
		"UINT_16":              9,
		"UINT_8":               10,
		"FLOAT_64":             11,
		"FLOAT_32":             12,
		"FLOAT_16":             13,
		"CHAR":                 14,
		"BOOL":                 15,
		"STRING":               16,
		"SYMBOL":               17,
		"VARIABLE_SIZE_STRING": 18,
	}
)

func (x PrimitiveType) Enum() *PrimitiveType {
	p := new(PrimitiveType)
	*p = x
	return p
}

func (x PrimitiveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrimitiveType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[0].Descriptor()
}

func (PrimitiveType) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[0]
}

func (x PrimitiveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrimitiveType.Descriptor instead.
func (PrimitiveType) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{0}
}

type Kind int32

const (
	// https://developers.google.com/protocol-buffers/docs/style#enums
	Kind_UNSPECIFIED_KIND Kind = 0
	Kind_PRIMITIVE_TYPE   Kind = 1
	Kind_VALUE_TYPE       Kind = 2
	Kind_CONSTANT_TYPE    Kind = 3
)

// Enum value maps for Kind.
var (
	Kind_name = map[int32]string{
		0: "UNSPECIFIED_KIND",
		1: "PRIMITIVE_TYPE",
		2: "VALUE_TYPE",
		3: "CONSTANT_TYPE",
	}
	Kind_value = map[string]int32{
		"UNSPECIFIED_KIND": 0,
		"PRIMITIVE_TYPE":   1,
		"VALUE_TYPE":       2,
		"CONSTANT_TYPE":    3,
	}
)

func (x Kind) Enum() *Kind {
	p := new(Kind)
	*p = x
	return p
}

func (x Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[1].Descriptor()
}

func (Kind) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[1]
}

func (x Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Kind.Descriptor instead.
func (Kind) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{1}
}

// Relations are currently identified by their type signature.
type RelationId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arguments []*RelType `protobuf:"bytes,1,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *RelationId) Reset() {
	*x = RelationId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationId) ProtoMessage() {}

func (x *RelationId) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationId.ProtoReflect.Descriptor instead.
func (*RelationId) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{0}
}

func (x *RelationId) GetArguments() []*RelType {
	if x != nil {
		return x.Arguments
	}
	return nil
}

// Renamed from Tuple to avoid collision with julia and python `Tuple`.
// Value types are flattened into their underlying primitive values.
type RelTuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arguments []*PrimitiveValue `protobuf:"bytes,1,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *RelTuple) Reset() {
	*x = RelTuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelTuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelTuple) ProtoMessage() {}

func (x *RelTuple) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelTuple.ProtoReflect.Descriptor instead.
func (*RelTuple) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{1}
}

func (x *RelTuple) GetArguments() []*PrimitiveValue {
	if x != nil {
		return x.Arguments
	}
	return nil
}

// Named this way to avoid collision with julia's Core.{U,}Int128.
type RelInt128 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Highbits uint64 `protobuf:"varint,1,opt,name=highbits,proto3" json:"highbits,omitempty"`
	Lowbits  uint64 `protobuf:"varint,2,opt,name=lowbits,proto3" json:"lowbits,omitempty"`
}

func (x *RelInt128) Reset() {
	*x = RelInt128{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelInt128) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelInt128) ProtoMessage() {}

func (x *RelInt128) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelInt128.ProtoReflect.Descriptor instead.
func (*RelInt128) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{2}
}

func (x *RelInt128) GetHighbits() uint64 {
	if x != nil {
		return x.Highbits
	}
	return 0
}

func (x *RelInt128) GetLowbits() uint64 {
	if x != nil {
		return x.Lowbits
	}
	return 0
}

type RelUInt128 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Highbits uint64 `protobuf:"varint,1,opt,name=highbits,proto3" json:"highbits,omitempty"`
	Lowbits  uint64 `protobuf:"varint,2,opt,name=lowbits,proto3" json:"lowbits,omitempty"`
}

func (x *RelUInt128) Reset() {
	*x = RelUInt128{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelUInt128) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelUInt128) ProtoMessage() {}

func (x *RelUInt128) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelUInt128.ProtoReflect.Descriptor instead.
func (*RelUInt128) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{3}
}

func (x *RelUInt128) GetHighbits() uint64 {
	if x != nil {
		return x.Highbits
	}
	return 0
}

func (x *RelUInt128) GetLowbits() uint64 {
	if x != nil {
		return x.Lowbits
	}
	return 0
}

type PrimitiveValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type tag indicates which value field is set
	Tag PrimitiveType `protobuf:"varint,1,opt,name=tag,proto3,enum=relationalai.protocol.PrimitiveType" json:"tag,omitempty"`
	// Types that are assignable to Value:
	//	*PrimitiveValue_Int128Val
	//	*PrimitiveValue_Int64Val
	//	*PrimitiveValue_Int32Val
	//	*PrimitiveValue_Int16Val
	//	*PrimitiveValue_Int8Val
	//	*PrimitiveValue_Uint128Val
	//	*PrimitiveValue_Uint64Val
	//	*PrimitiveValue_Uint32Val
	//	*PrimitiveValue_Uint16Val
	//	*PrimitiveValue_Uint8Val
	//	*PrimitiveValue_Float64Val
	//	*PrimitiveValue_Float32Val
	//	*PrimitiveValue_Float16Val
	//	*PrimitiveValue_CharVal
	//	*PrimitiveValue_BoolVal
	//	*PrimitiveValue_StringVal
	Value isPrimitiveValue_Value `protobuf_oneof:"value"`
}

func (x *PrimitiveValue) Reset() {
	*x = PrimitiveValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrimitiveValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimitiveValue) ProtoMessage() {}

func (x *PrimitiveValue) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimitiveValue.ProtoReflect.Descriptor instead.
func (*PrimitiveValue) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{4}
}

func (x *PrimitiveValue) GetTag() PrimitiveType {
	if x != nil {
		return x.Tag
	}
	return PrimitiveType_UNSPECIFIED_TYPE
}

func (m *PrimitiveValue) GetValue() isPrimitiveValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *PrimitiveValue) GetInt128Val() *RelInt128 {
	if x, ok := x.GetValue().(*PrimitiveValue_Int128Val); ok {
		return x.Int128Val
	}
	return nil
}

func (x *PrimitiveValue) GetInt64Val() int64 {
	if x, ok := x.GetValue().(*PrimitiveValue_Int64Val); ok {
		return x.Int64Val
	}
	return 0
}

func (x *PrimitiveValue) GetInt32Val() int32 {
	if x, ok := x.GetValue().(*PrimitiveValue_Int32Val); ok {
		return x.Int32Val
	}
	return 0
}

func (x *PrimitiveValue) GetInt16Val() int32 {
	if x, ok := x.GetValue().(*PrimitiveValue_Int16Val); ok {
		return x.Int16Val
	}
	return 0
}

func (x *PrimitiveValue) GetInt8Val() int32 {
	if x, ok := x.GetValue().(*PrimitiveValue_Int8Val); ok {
		return x.Int8Val
	}
	return 0
}

func (x *PrimitiveValue) GetUint128Val() *RelUInt128 {
	if x, ok := x.GetValue().(*PrimitiveValue_Uint128Val); ok {
		return x.Uint128Val
	}
	return nil
}

func (x *PrimitiveValue) GetUint64Val() uint64 {
	if x, ok := x.GetValue().(*PrimitiveValue_Uint64Val); ok {
		return x.Uint64Val
	}
	return 0
}

func (x *PrimitiveValue) GetUint32Val() uint32 {
	if x, ok := x.GetValue().(*PrimitiveValue_Uint32Val); ok {
		return x.Uint32Val
	}
	return 0
}

func (x *PrimitiveValue) GetUint16Val() uint32 {
	if x, ok := x.GetValue().(*PrimitiveValue_Uint16Val); ok {
		return x.Uint16Val
	}
	return 0
}

func (x *PrimitiveValue) GetUint8Val() uint32 {
	if x, ok := x.GetValue().(*PrimitiveValue_Uint8Val); ok {
		return x.Uint8Val
	}
	return 0
}

func (x *PrimitiveValue) GetFloat64Val() float64 {
	if x, ok := x.GetValue().(*PrimitiveValue_Float64Val); ok {
		return x.Float64Val
	}
	return 0
}

func (x *PrimitiveValue) GetFloat32Val() float32 {
	if x, ok := x.GetValue().(*PrimitiveValue_Float32Val); ok {
		return x.Float32Val
	}
	return 0
}

func (x *PrimitiveValue) GetFloat16Val() float32 {
	if x, ok := x.GetValue().(*PrimitiveValue_Float16Val); ok {
		return x.Float16Val
	}
	return 0
}

func (x *PrimitiveValue) GetCharVal() uint32 {
	if x, ok := x.GetValue().(*PrimitiveValue_CharVal); ok {
		return x.CharVal
	}
	return 0
}

func (x *PrimitiveValue) GetBoolVal() bool {
	if x, ok := x.GetValue().(*PrimitiveValue_BoolVal); ok {
		return x.BoolVal
	}
	return false
}

func (x *PrimitiveValue) GetStringVal() []byte {
	if x, ok := x.GetValue().(*PrimitiveValue_StringVal); ok {
		return x.StringVal
	}
	return nil
}

type isPrimitiveValue_Value interface {
	isPrimitiveValue_Value()
}

type PrimitiveValue_Int128Val struct {
	Int128Val *RelInt128 `protobuf:"bytes,2,opt,name=int128_val,json=int128Val,proto3,oneof"` // Not present in protobuf
}

type PrimitiveValue_Int64Val struct {
	Int64Val int64 `protobuf:"varint,3,opt,name=int64_val,json=int64Val,proto3,oneof"`
}

type PrimitiveValue_Int32Val struct {
	Int32Val int32 `protobuf:"varint,4,opt,name=int32_val,json=int32Val,proto3,oneof"`
}

type PrimitiveValue_Int16Val struct {
	Int16Val int32 `protobuf:"varint,5,opt,name=int16_val,json=int16Val,proto3,oneof"` // Not present in protobuf; int32
}

type PrimitiveValue_Int8Val struct {
	Int8Val int32 `protobuf:"varint,6,opt,name=int8_val,json=int8Val,proto3,oneof"` // Not present in protobuf; int32
}

type PrimitiveValue_Uint128Val struct {
	Uint128Val *RelUInt128 `protobuf:"bytes,7,opt,name=uint128_val,json=uint128Val,proto3,oneof"` // Not present in protobuf
}

type PrimitiveValue_Uint64Val struct {
	Uint64Val uint64 `protobuf:"varint,8,opt,name=uint64_val,json=uint64Val,proto3,oneof"`
}

type PrimitiveValue_Uint32Val struct {
	Uint32Val uint32 `protobuf:"varint,9,opt,name=uint32_val,json=uint32Val,proto3,oneof"`
}

type PrimitiveValue_Uint16Val struct {
	Uint16Val uint32 `protobuf:"varint,10,opt,name=uint16_val,json=uint16Val,proto3,oneof"` // Not present in protobuf; uint32
}

type PrimitiveValue_Uint8Val struct {
	Uint8Val uint32 `protobuf:"varint,11,opt,name=uint8_val,json=uint8Val,proto3,oneof"` // Not present in protobuf; uint32
}

type PrimitiveValue_Float64Val struct {
	Float64Val float64 `protobuf:"fixed64,12,opt,name=float64_val,json=float64Val,proto3,oneof"`
}

type PrimitiveValue_Float32Val struct {
	Float32Val float32 `protobuf:"fixed32,13,opt,name=float32_val,json=float32Val,proto3,oneof"`
}

type PrimitiveValue_Float16Val struct {
	Float16Val float32 `protobuf:"fixed32,14,opt,name=float16_val,json=float16Val,proto3,oneof"` // Not present in protobuf
}

type PrimitiveValue_CharVal struct {
	CharVal uint32 `protobuf:"varint,15,opt,name=char_val,json=charVal,proto3,oneof"`
}

type PrimitiveValue_BoolVal struct {
	BoolVal bool `protobuf:"varint,16,opt,name=bool_val,json=boolVal,proto3,oneof"`
}

type PrimitiveValue_StringVal struct {
	// We use bytes for strings because proto has an encoding
	// requirement for the proto3::string type.
	StringVal []byte `protobuf:"bytes,17,opt,name=string_val,json=stringVal,proto3,oneof"`
}

func (*PrimitiveValue_Int128Val) isPrimitiveValue_Value() {}

func (*PrimitiveValue_Int64Val) isPrimitiveValue_Value() {}

func (*PrimitiveValue_Int32Val) isPrimitiveValue_Value() {}

func (*PrimitiveValue_Int16Val) isPrimitiveValue_Value() {}

func (*PrimitiveValue_Int8Val) isPrimitiveValue_Value() {}

func (*PrimitiveValue_Uint128Val) isPrimitiveValue_Value() {}

func (*PrimitiveValue_Uint64Val) isPrimitiveValue_Value() {}

func (*PrimitiveValue_Uint32Val) isPrimitiveValue_Value() {}

func (*PrimitiveValue_Uint16Val) isPrimitiveValue_Value() {}

func (*PrimitiveValue_Uint8Val) isPrimitiveValue_Value() {}

func (*PrimitiveValue_Float64Val) isPrimitiveValue_Value() {}

func (*PrimitiveValue_Float32Val) isPrimitiveValue_Value() {}

func (*PrimitiveValue_Float16Val) isPrimitiveValue_Value() {}

func (*PrimitiveValue_CharVal) isPrimitiveValue_Value() {}

func (*PrimitiveValue_BoolVal) isPrimitiveValue_Value() {}

func (*PrimitiveValue_StringVal) isPrimitiveValue_Value() {}

type ValueType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Constant types are allowed, e.g. the `64` in `decimal[64]`. They serve as type
	// parameters.
	ArgumentTypes []*RelType `protobuf:"bytes,1,rep,name=argument_types,json=argumentTypes,proto3" json:"argument_types,omitempty"`
}

func (x *ValueType) Reset() {
	*x = ValueType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueType) ProtoMessage() {}

func (x *ValueType) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueType.ProtoReflect.Descriptor instead.
func (*ValueType) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{5}
}

func (x *ValueType) GetArgumentTypes() []*RelType {
	if x != nil {
		return x.ArgumentTypes
	}
	return nil
}

// Every value can be used as a type.
type ConstantType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required
	// This is the type of the constant and describes whatever is in the RelTuple value
	RelType *RelType `protobuf:"bytes,1,opt,name=rel_type,json=relType,proto3" json:"rel_type,omitempty"`
	// The tuple contains only the values that are not constant.
	// E.g. for decimal[64](3.14) only 3.14 is part of the data.
	// Required
	//
	// Tuple because of e.g. specialize on Uniform distribution
	Value *RelTuple `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ConstantType) Reset() {
	*x = ConstantType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConstantType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConstantType) ProtoMessage() {}

func (x *ConstantType) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConstantType.ProtoReflect.Descriptor instead.
func (*ConstantType) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{6}
}

func (x *ConstantType) GetRelType() *RelType {
	if x != nil {
		return x.RelType
	}
	return nil
}

func (x *ConstantType) GetValue() *RelTuple {
	if x != nil {
		return x.Value
	}
	return nil
}

// Union
type RelType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag Kind `protobuf:"varint,1,opt,name=tag,proto3,enum=relationalai.protocol.Kind" json:"tag,omitempty"`
	// Only one of the following is allowed.
	PrimitiveType PrimitiveType `protobuf:"varint,2,opt,name=primitive_type,json=primitiveType,proto3,enum=relationalai.protocol.PrimitiveType" json:"primitive_type,omitempty"`
	ValueType     *ValueType    `protobuf:"bytes,3,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	ConstantType  *ConstantType `protobuf:"bytes,4,opt,name=constant_type,json=constantType,proto3" json:"constant_type,omitempty"`
}

func (x *RelType) Reset() {
	*x = RelType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelType) ProtoMessage() {}

func (x *RelType) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelType.ProtoReflect.Descriptor instead.
func (*RelType) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{7}
}

func (x *RelType) GetTag() Kind {
	if x != nil {
		return x.Tag
	}
	return Kind_UNSPECIFIED_KIND
}

func (x *RelType) GetPrimitiveType() PrimitiveType {
	if x != nil {
		return x.PrimitiveType
	}
	return PrimitiveType_UNSPECIFIED_TYPE
}

func (x *RelType) GetValueType() *ValueType {
	if x != nil {
		return x.ValueType
	}
	return nil
}

func (x *RelType) GetConstantType() *ConstantType {
	if x != nil {
		return x.ConstantType
	}
	return nil
}

var File_schema_proto protoreflect.FileDescriptor

var file_schema_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x4a, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52,
	0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x4f, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x43, 0x0a,
	0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x41, 0x0a, 0x09, 0x52, 0x65, 0x6c, 0x49, 0x6e, 0x74, 0x31, 0x32, 0x38, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x69, 0x67, 0x68, 0x62, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x68, 0x69, 0x67, 0x68, 0x62, 0x69, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x6f, 0x77, 0x62, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x6f,
	0x77, 0x62, 0x69, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x55, 0x49, 0x6e, 0x74,
	0x31, 0x32, 0x38, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x69, 0x67, 0x68, 0x62, 0x69, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x68, 0x69, 0x67, 0x68, 0x62, 0x69, 0x74, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x77, 0x62, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x6c, 0x6f, 0x77, 0x62, 0x69, 0x74, 0x73, 0x22, 0x9a, 0x05, 0x0a, 0x0e, 0x50, 0x72,
	0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x12, 0x41, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x31, 0x32, 0x38, 0x5f, 0x76,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x52, 0x65, 0x6c, 0x49, 0x6e, 0x74, 0x31, 0x32, 0x38, 0x48, 0x00, 0x52, 0x09, 0x69, 0x6e,
	0x74, 0x31, 0x32, 0x38, 0x56, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x5f, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f,
	0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x5f, 0x76,
	0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x31,
	0x36, 0x56, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x38, 0x5f, 0x76, 0x61, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x38, 0x56, 0x61,
	0x6c, 0x12, 0x44, 0x0a, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x31, 0x32, 0x38, 0x5f, 0x76, 0x61, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52,
	0x65, 0x6c, 0x55, 0x49, 0x6e, 0x74, 0x31, 0x32, 0x38, 0x48, 0x00, 0x52, 0x0a, 0x75, 0x69, 0x6e,
	0x74, 0x31, 0x32, 0x38, 0x56, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x09, 0x75,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x75, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x09,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x75, 0x69, 0x6e,
	0x74, 0x31, 0x36, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x09, 0x75, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x56, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x09, 0x75, 0x69,
	0x6e, 0x74, 0x38, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x08, 0x75, 0x69, 0x6e, 0x74, 0x38, 0x56, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0b, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00,
	0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0b,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x12,
	0x21, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x31, 0x36, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x31, 0x36, 0x56,
	0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72, 0x56, 0x61, 0x6c, 0x12,
	0x1b, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0a,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x42, 0x07, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x52, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x61, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x72,
	0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72,
	0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65,
	0x6c, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x90, 0x02,
	0x0a, 0x07, 0x52, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4b,
	0x69, 0x6e, 0x64, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x4b, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6d,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x2a, 0x92, 0x02, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x54, 0x5f,
	0x31, 0x32, 0x38, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x54, 0x5f, 0x36, 0x34, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x54, 0x5f, 0x33, 0x32, 0x10, 0x03, 0x12, 0x0a, 0x0a,
	0x06, 0x49, 0x4e, 0x54, 0x5f, 0x31, 0x36, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54,
	0x5f, 0x38, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x49, 0x4e, 0x54, 0x5f, 0x31, 0x32, 0x38,
	0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x49, 0x4e, 0x54, 0x5f, 0x36, 0x34, 0x10, 0x07, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x49, 0x4e, 0x54, 0x5f, 0x33, 0x32, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x49, 0x4e, 0x54, 0x5f, 0x31, 0x36, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e,
	0x54, 0x5f, 0x38, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x5f, 0x36,
	0x34, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x5f, 0x33, 0x32, 0x10,
	0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x5f, 0x31, 0x36, 0x10, 0x0d, 0x12,
	0x08, 0x0a, 0x04, 0x43, 0x48, 0x41, 0x52, 0x10, 0x0e, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f,
	0x4c, 0x10, 0x0f, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x10, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x10, 0x11, 0x12, 0x18, 0x0a, 0x14, 0x56,
	0x41, 0x52, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x53, 0x54, 0x52,
	0x49, 0x4e, 0x47, 0x10, 0x12, 0x2a, 0x53, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a,
	0x10, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x4b, 0x49, 0x4e,
	0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x49, 0x4d, 0x49, 0x54, 0x49, 0x56, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x41, 0x4c, 0x55, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4e, 0x53, 0x54,
	0x41, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x03, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_schema_proto_rawDescOnce sync.Once
	file_schema_proto_rawDescData = file_schema_proto_rawDesc
)

func file_schema_proto_rawDescGZIP() []byte {
	file_schema_proto_rawDescOnce.Do(func() {
		file_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_schema_proto_rawDescData)
	})
	return file_schema_proto_rawDescData
}

var file_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_schema_proto_goTypes = []interface{}{
	(PrimitiveType)(0),     // 0: relationalai.protocol.PrimitiveType
	(Kind)(0),              // 1: relationalai.protocol.Kind
	(*RelationId)(nil),     // 2: relationalai.protocol.RelationId
	(*RelTuple)(nil),       // 3: relationalai.protocol.RelTuple
	(*RelInt128)(nil),      // 4: relationalai.protocol.RelInt128
	(*RelUInt128)(nil),     // 5: relationalai.protocol.RelUInt128
	(*PrimitiveValue)(nil), // 6: relationalai.protocol.PrimitiveValue
	(*ValueType)(nil),      // 7: relationalai.protocol.ValueType
	(*ConstantType)(nil),   // 8: relationalai.protocol.ConstantType
	(*RelType)(nil),        // 9: relationalai.protocol.RelType
}
var file_schema_proto_depIdxs = []int32{
	9,  // 0: relationalai.protocol.RelationId.arguments:type_name -> relationalai.protocol.RelType
	6,  // 1: relationalai.protocol.RelTuple.arguments:type_name -> relationalai.protocol.PrimitiveValue
	0,  // 2: relationalai.protocol.PrimitiveValue.tag:type_name -> relationalai.protocol.PrimitiveType
	4,  // 3: relationalai.protocol.PrimitiveValue.int128_val:type_name -> relationalai.protocol.RelInt128
	5,  // 4: relationalai.protocol.PrimitiveValue.uint128_val:type_name -> relationalai.protocol.RelUInt128
	9,  // 5: relationalai.protocol.ValueType.argument_types:type_name -> relationalai.protocol.RelType
	9,  // 6: relationalai.protocol.ConstantType.rel_type:type_name -> relationalai.protocol.RelType
	3,  // 7: relationalai.protocol.ConstantType.value:type_name -> relationalai.protocol.RelTuple
	1,  // 8: relationalai.protocol.RelType.tag:type_name -> relationalai.protocol.Kind
	0,  // 9: relationalai.protocol.RelType.primitive_type:type_name -> relationalai.protocol.PrimitiveType
	7,  // 10: relationalai.protocol.RelType.value_type:type_name -> relationalai.protocol.ValueType
	8,  // 11: relationalai.protocol.RelType.constant_type:type_name -> relationalai.protocol.ConstantType
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_schema_proto_init() }
func file_schema_proto_init() {
	if File_schema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelTuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelInt128); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelUInt128); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrimitiveValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConstantType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_schema_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*PrimitiveValue_Int128Val)(nil),
		(*PrimitiveValue_Int64Val)(nil),
		(*PrimitiveValue_Int32Val)(nil),
		(*PrimitiveValue_Int16Val)(nil),
		(*PrimitiveValue_Int8Val)(nil),
		(*PrimitiveValue_Uint128Val)(nil),
		(*PrimitiveValue_Uint64Val)(nil),
		(*PrimitiveValue_Uint32Val)(nil),
		(*PrimitiveValue_Uint16Val)(nil),
		(*PrimitiveValue_Uint8Val)(nil),
		(*PrimitiveValue_Float64Val)(nil),
		(*PrimitiveValue_Float32Val)(nil),
		(*PrimitiveValue_Float16Val)(nil),
		(*PrimitiveValue_CharVal)(nil),
		(*PrimitiveValue_BoolVal)(nil),
		(*PrimitiveValue_StringVal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schema_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_proto_goTypes,
		DependencyIndexes: file_schema_proto_depIdxs,
		EnumInfos:         file_schema_proto_enumTypes,
		MessageInfos:      file_schema_proto_msgTypes,
	}.Build()
	File_schema_proto = out.File
	file_schema_proto_rawDesc = nil
	file_schema_proto_goTypes = nil
	file_schema_proto_depIdxs = nil
}
